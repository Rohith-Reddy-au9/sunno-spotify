[{"C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\index.js":"1","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\index.js":"2","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\Sidebar.js":"3","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\Topbar.js":"4","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\Content.js":"5","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\Playbar.js":"6","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\Modal.js":"7","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\Toast.js":"8","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\App.js":"9","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\reducers\\index.js":"10"},{"size":152,"mtime":1611161989405,"results":"11","hashOfConfig":"12"},{"size":1557,"mtime":1611202053239,"results":"13","hashOfConfig":"12"},{"size":2114,"mtime":1611162275110,"results":"14","hashOfConfig":"12"},{"size":192,"mtime":1611141988420,"results":"15","hashOfConfig":"12"},{"size":6488,"mtime":1611151791264,"results":"16","hashOfConfig":"12"},{"size":2461,"mtime":1611153062193,"results":"17","hashOfConfig":"12"},{"size":373,"mtime":1611152998377,"results":"18","hashOfConfig":"12"},{"size":515,"mtime":1611153283746,"results":"19","hashOfConfig":"12"},{"size":157,"mtime":1611201955603,"results":"20","hashOfConfig":"12"},{"size":1707,"mtime":1611145448266,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1oho4gu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"24"},"C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\index.js",[],["50","51"],"C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\index.js",[],"C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\Sidebar.js",["52"],"\r\n\r\nimport React, { useState, useRef, useContext } from 'react'\r\n// import { css, jsx } from '@emotion/react'\r\nimport { StoreContext } from './index'\r\nimport Modal from './Modal'\r\nimport Toast from './Toast'\r\nimport logo from '../img/spotify-white.png'\r\nimport './Sidebar.css'\r\n\r\nconst Sidebar = () => {\r\n  const [sidebarState, setState] = useState({\r\n    modal: false,\r\n    toast: ''\r\n  })\r\n\r\n  const { state, dispatch } = useContext(StoreContext)\r\n\r\n  const playlistRef = useRef(null)\r\n  const playlists = Object.keys(state.playlists)\r\n\r\n  const addPlaylist = e => {\r\n    e.preventDefault()\r\n    const list = playlistRef.current.value\r\n\r\n    dispatch({ type: 'ADD_PLAYLIST', playlist: list })\r\n\r\n    setState({\r\n      ...sidebarState,\r\n      modal: false,\r\n      toast: 'Playlist was created successfully!'\r\n    })\r\n  }\r\n\r\n  const handleModal = () =>\r\n    setState({ ...sidebarState, modal: !sidebarState.modal })\r\n\r\n  return (\r\n    <ul className=\"Sidebar\">\r\n      <img src={logo} />\r\n\r\n      <li className=\"library\">Library</li>\r\n\r\n      {playlists.map(list => (\r\n        <li\r\n          key={list}\r\n          className={list === state.currentPlaylist ? 'active' : ''}\r\n          onClick={() => dispatch({ type: 'SET_PLAYLIST', playlist: list })}\r\n        >\r\n          {list}\r\n        </li>\r\n      ))}\r\n\r\n      <li className=\"new-playlist\" onClick={handleModal}>\r\n        <i className=\"fa fa-plus-circle\" />\r\n        <span>New Playlist</span>\r\n      </li>\r\n\r\n      <Modal show={sidebarState.modal} close={handleModal}>\r\n        <form onSubmit={addPlaylist}>\r\n          <div className=\"title\">New Playlist</div>\r\n\r\n          <div className=\"content-wrap\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"My Playlist\"\r\n              ref={playlistRef}\r\n              required\r\n            />\r\n\r\n            <br />\r\n\r\n            <button type=\"submit\">Create</button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n\r\n      <Toast\r\n        toast={sidebarState.toast}\r\n        close={() => setState({ ...sidebarState, toast: '' })}\r\n      />\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Sidebar","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\Topbar.js",[],"C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\Content.js",["53"],"// import React from 'react'\r\n// import './Content.css'\r\n// const Content = () => {\r\n//     return(\r\n//         <div className = \"Content\">\r\n//             Content\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Content\r\n\r\nimport React, { useCallback, useContext, useState } from 'react'\r\n// import { css, jsx } from '@emotion/core'\r\nimport { StoreContext } from './index'\r\n\r\nimport Modal from './Modal'\r\nimport Toast from './Toast'\r\nimport './Content.css'\r\nconst Content = () => {\r\n  const { state, dispatch } = useContext(StoreContext)\r\n\r\n  const [toast, setToast] = useState('')\r\n  const [playlistSelect, setPlayListSelect] = useState('')\r\n  const [playVisibleId, setPlayVisibleId] = useState(\r\n    false\r\n  )\r\n\r\n  const currentPlaylist = state.currentPlaylist\r\n\r\n  const playlists = Object.keys(state.playlists).filter(\r\n    list => !['home', 'favorites'].includes(list)\r\n  )\r\n  const songIds = Array.from(\r\n    state.playlists[currentPlaylist]\r\n  )\r\n\r\n  const handleSelect = useCallback(e => {\r\n    setPlayListSelect(e.target.value)\r\n  })\r\n\r\n  return (\r\n    <div className=\"Content\" css={CSS}>\r\n      <div className=\"playlist-title\">\r\n        {currentPlaylist}\r\n      </div>\r\n\r\n      {songIds.length <= 0 ? (\r\n        <p style={{ marginTop: 10 }}>\r\n          Your playlist is empty. Start by adding some\r\n          songs!\r\n        </p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <td />\r\n              <td>Title</td>\r\n              <td>Artist</td>\r\n              <td>Length</td>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {songIds.map(id => {\r\n              const {\r\n                title,\r\n                artist,\r\n                length\r\n              } = state.media[id]\r\n              const isFavorite = state.playlists.favorites.has(\r\n                id\r\n              )\r\n\r\n              return (\r\n                <tr key={id}>\r\n                  <td\r\n                    onMouseEnter={() =>\r\n                      setPlayVisibleId(id)\r\n                    }\r\n                    onMouseLeave={() =>\r\n                      setPlayVisibleId('')\r\n                    }\r\n                    style={{ width: 75, paddingLeft: 5 }}\r\n                  >\r\n                    <PlayPause\r\n                      playing={state.playing}\r\n                      songId={id}\r\n                      isCurrentSong={\r\n                        state.currentSongId === id\r\n                      }\r\n                      visible={playVisibleId === id}\r\n                    />\r\n\r\n                    <span style={{ marginRight: 10 }} />\r\n\r\n                    <Favorite\r\n                      isFavorite={isFavorite}\r\n                      songId={id}\r\n                    />\r\n\r\n                    <span style={{ marginRight: 10 }} />\r\n\r\n                    <i\r\n                      className=\"fa fa-plus\"\r\n                      onClick={() => {\r\n                        dispatch({\r\n                          type: 'ADD_TO_PLAYLIST',\r\n                          songId: id\r\n                        })\r\n                      }}\r\n                    />\r\n                  </td>\r\n                  <td>{title}</td>\r\n                  <td>{artist}</td>\r\n                  <td>{length}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      <Modal\r\n        show={state.addToPlaylistId}\r\n        close={() => {\r\n          dispatch({ type: 'ABORT_ADD_TO_PLAYLIST' })\r\n        }}\r\n      >\r\n        <div style={{ textAlign: 'center' }}>\r\n          <div style={{ fontSize: 18, marginBottom: 20 }}>\r\n            Add To Playlist\r\n          </div>\r\n\r\n          {playlists.length < 1 ? (\r\n            <>\r\n              <p>\r\n                You don't have any custom playlists yet.\r\n                Start by creating one in the sidebar menu!\r\n              </p>\r\n\r\n              <div style={{ marginTop: 15 }}>\r\n                <button>Ok</button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <select\r\n                value={playlistSelect}\r\n                onChange={handleSelect}\r\n                style={{\r\n                  fontSize: 16,\r\n                  textTransform: 'capitalize',\r\n                  width: 115,\r\n                  height: 25\r\n                }}\r\n              >\r\n                <option value=\"\">Choose</option>\r\n\r\n                {playlists.map(list => (\r\n                  <option\r\n                    key={list}\r\n                    value={list}\r\n                    disabled={state.playlists[list].has(\r\n                      state.addToPlaylistId\r\n                    )}\r\n                  >\r\n                    {list}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n\r\n              <div style={{ marginTop: 20 }}>\r\n                <button\r\n                  onClick={() => {\r\n                    if (playlistSelect === '') return\r\n                    \r\n                    dispatch({\r\n                      type: 'SAVE_TO_PLAYLIST',\r\n                      playlist: playlistSelect\r\n                    })\r\n\r\n                    setToast(\r\n                      'Successfully added to your playlist.'\r\n                    )\r\n\r\n                    setPlayListSelect('')\r\n                  }}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n\r\n      <Toast toast={toast} close={() => setToast('')} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Favorite = ({ isFavorite, songId }) => {\r\n  const { dispatch } = useContext(StoreContext)\r\n\r\n  return isFavorite ? (\r\n    <i\r\n      className=\"fa fa-heart\"\r\n      onClick={() => dispatch({ type: 'REMOVE_FAVORITE', songId })}\r\n    />\r\n  ) : (\r\n    <i\r\n      className=\"fa fa-heart-o\"\r\n      onClick={() => dispatch({ type: 'ADD_FAVORITE', songId })}\r\n    />\r\n  )\r\n}\r\n\r\nconst PlayPause = ({ playing, songId, isCurrentSong, visible }) => {\r\n  const { dispatch } = useContext(StoreContext)\r\n  const style = { visibility: visible ? 'visible' : 'hidden' }\r\n\r\n  if (isCurrentSong && playing) {\r\n    return (\r\n      <i\r\n        className=\"fa fa-pause\"\r\n        onClick={() => dispatch({ type: 'PAUSE' })}\r\n        style={style}\r\n      />\r\n    )\r\n  } else {\r\n    return (\r\n      <i\r\n        className=\"fa fa-play\"\r\n        onClick={() => dispatch({ type: 'PLAY', songId })}\r\n        style={style}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\Playbar.js",["54"],"// import React from 'react'\r\n// import './Playbar.css'\r\n// const Playbar = () => {\r\n//     return(\r\n//         <div className = \"Playbar\">\r\n//             Playbar\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Playbar\r\n\r\nimport React, { useContext, useCallback } from 'react'\r\n// import { css, jsx } from '@emotion/react'\r\nimport './Playbar.css'\r\nimport { StoreContext } from './index'\r\n\r\nconst formatTime = inputSeconds => {\r\n  let seconds = Math.floor(inputSeconds % 60)\r\n  if (seconds < 10) seconds = `0${seconds}`\r\n\r\n  const minutes = Math.floor(inputSeconds / 60)\r\n\r\n  return `${minutes}:${seconds}`\r\n}\r\n\r\nconst handleProgress = (currentTime, duration) => 600 * (currentTime / duration)\r\n\r\nconst Playbar = () => {\r\n  const { state, dispatch } = useContext(StoreContext)\r\n  const song = state.media[state.currentSongId]\r\n\r\n  if (!song) {\r\n    return <div className=\"Playbar\"/>\r\n  }\r\n\r\n  const playOrPause = () =>\r\n    state.playing ? dispatch({ type: 'PAUSE' }) : dispatch({ type: 'PLAY' })\r\n\r\n  // const setVolume = useCallback(e =>\r\n  //   dispatch({ type: 'SET_VOLUME', volume: e.target.value })\r\n  // )\r\n\r\n  return (\r\n    <div className=\"Playbar\">\r\n      <div className=\"left\">\r\n        {song && (\r\n          <>\r\n            <div>{song.title}</div>\r\n\r\n            <div className=\"artist\">{song.artist}</div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"middle\">\r\n        <div className=\"play-pause-circle\" onClick={playOrPause}>\r\n          <i\r\n            className={`fa fa-${state.playing ? 'pause' : 'play'}`}\r\n            style={{ transform: state.playing ? '' : 'translateX(1.5px)' }}\r\n          />\r\n        </div>\r\n\r\n        <div style={{ marginTop: 2.5 }}>\r\n          <span>{formatTime(Math.floor(state.currentTime))}</span>\r\n\r\n          <div className=\"progress-container\">\r\n            <div\r\n              className=\"bar\"\r\n              style={{\r\n                width: handleProgress(state.currentTime, state.duration)\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <span>{formatTime(state.duration)}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"right\">\r\n        <i className=\"fa fa-volume-up\" />\r\n\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          value={state.volume}\r\n          step=\"0.01\"\r\n          style={{ marginLeft: 10 }}\r\n          // onChange={setVolume}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Playbar","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\Modal.js",["55","56"],"import React from 'react'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nconst Modal = ({ children, show, close }) => {\r\n  if (!show) return null\r\n\r\n  return (\r\n    <div className=\"Modal\" css={CSS}>\r\n      <div className=\"modal-content\">\r\n        <i className=\"fa fa-times\" onClick={close} />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Modal\r\n",["57","58"],"C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\Toast.js",["59"],"import React, { useEffect } from 'react'\r\n// import { css, jsx } from '@emotion/react'\r\nimport './Toast.css'\r\nconst Toast = ({ toast, close }) => {\r\n  useEffect(() => {\r\n    if (!toast) return\r\n\r\n    const closeToast = () => {\r\n      setTimeout(() => {\r\n        close()\r\n      }, 2500)\r\n    }\r\n\r\n    closeToast()\r\n\r\n    return () => clearTimeout(closeToast)\r\n  }, [toast])\r\n\r\n  if (!toast) return null\r\n\r\n  return (\r\n    <div className=\"toast\" css={CSS}>\r\n      {toast}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Toast\r\n","C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\components\\App.js",[],"C:\\Users\\pulag\\OneDrive\\Desktop\\MERN\\login\\src\\reducers\\index.js",["60"],"import media from '../media.json'\r\n\r\nconst DEFAULT_PLAYLIST = 'home'\r\nconst DEFAULT_VOLUME = 0.65\r\n\r\nexport const initialState = {\r\n  media,\r\n  addToPlaylistId: '',\r\n  currentPlaylist: DEFAULT_PLAYLIST,\r\n  currentSongId: '',\r\n  currentTime: 0,\r\n  duration: 0,\r\n  playing: false,\r\n  playlists: {\r\n    home: new Set(media.ids),\r\n    favorites: new Set()\r\n  },\r\n  volume: DEFAULT_VOLUME\r\n}\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_PLAYLIST':\r\n      return {\r\n        ...state,\r\n        playlists: { ...state.playlists, [action.playlist]: new Set() }\r\n      }\r\n    case 'ADD_TO_PLAYLIST':\r\n      return { ...state, addToPlaylistId: action.songId }\r\n    case 'ABORT_ADD_TO_PLAYLIST':\r\n      return { ...state, addToPlaylistId: '' }\r\n    case 'ADD_FAVORITE':\r\n      state.playlists.favorites.add(action.songId)\r\n      return { ...state }\r\n    case 'PLAY':\r\n      return {\r\n        ...state,\r\n        playing: true,\r\n        currentSongId: action.songId || state.currentSongId\r\n      }\r\n    case 'PAUSE':\r\n      return { ...state, playing: false }\r\n    case 'REMOVE_FAVORITE':\r\n      state.playlists.favorites.delete(action.songId)\r\n      return { ...state }\r\n    case 'SAVE_TO_PLAYLIST':\r\n      state.playlists[action.playlist].add(state.addToPlaylistId)\r\n      return { ...state, addToPlaylistId: '' }\r\n    case 'SET_CURRENT_TIME':\r\n      return { ...state, currentTime: action.time }\r\n    case 'SET_DURATION':\r\n      return { ...state, duration: action.duration }\r\n    case 'SET_PLAYLIST':\r\n      return { ...state, currentPlaylist: action.playlist }\r\n    case 'SET_VOLUME':\r\n      return { ...state, volume: parseFloat(action.volume) }\r\n  }\r\n\r\n  return state\r\n}\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":40,"column":7,"nodeType":"67","endLine":40,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":38,"column":24,"nodeType":"70","endLine":38,"endColumn":35},{"ruleId":"71","severity":1,"message":"72","line":13,"column":29,"nodeType":"70","messageId":"73","endLine":13,"endColumn":40},{"ruleId":"71","severity":1,"message":"74","line":2,"column":10,"nodeType":"70","messageId":"73","endLine":2,"endColumn":13},{"ruleId":"71","severity":1,"message":"75","line":2,"column":15,"nodeType":"70","messageId":"73","endLine":2,"endColumn":18},{"ruleId":"61","replacedBy":"76"},{"ruleId":"63","replacedBy":"77"},{"ruleId":"68","severity":1,"message":"78","line":17,"column":6,"nodeType":"79","endLine":17,"endColumn":13,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":22,"column":3,"nodeType":"83","messageId":"84","endLine":57,"endColumn":4},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'useCallback' is defined but never used.","unusedVar","'css' is defined but never used.","'jsx' is defined but never used.",["85"],["86"],"React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["87"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [close, toast]",{"range":"90","text":"91"},[364,371],"[close, toast]"]